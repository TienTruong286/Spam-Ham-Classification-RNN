# -*- coding: utf-8 -*-
"""Spam/Ham Classification RNN

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RYP6F4OWtOtTVrV9OrR44-0vdvYR8zb5
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = pd.read_csv("spam.csv")

data.head()

data_message = data['Message'].values

data["Category"] = data["Category"].map({"spam": 1, "ham":0})

y = data["Category"].values
y

data_message

from tensorflow.keras.preprocessing.text import Tokenizer

tokenizer = Tokenizer(num_words = 10000)
tokenizer.fit_on_texts(data_message)
word_index = tokenizer.word_index
sequences = tokenizer.texts_to_sequences(data_message)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(sequences,y, test_size = 0.2)

from tensorflow.keras.preprocessing import sequence

X_train = sequence.pad_sequences(X_train, maxlen = 500)
X_test = sequence.pad_sequences(X_test, maxlen = 500)

from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Embedding, LSTM, Dense,Dropout
from tensorflow.keras.layers import Bidirectional

model = Sequential()
model.add(Embedding(input_dim=10000, output_dim=100, input_length=500))
model.add(LSTM(units=64, dropout=0.2, return_sequences=True))
model.add(Bidirectional(LSTM(units=64, dropout=0.2)))
model.add(Dense(units=1, activation='sigmoid'))

model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])

model.fit(X_train, y_train, epochs = 3, batch_size= 64, validation_data= (X_test, y_test))

prediction = model.predict(X_test)
prediction = np.argmax(prediction, axis = 1)

from sklearn.metrics import classification_report
print(classification_report(prediction, y_test))



